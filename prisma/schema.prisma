// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          String    @default("USER")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String?
  price       Float
  cost        Float?
  category    String
  stock       Int        @default(0)
  sku         String     @unique
  image       String?
  status      String     @default("active")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  OrderItem   OrderItem[]
}

model Customer {
  id           String    @id @default(cuid())
  name         String
  email        String?   @unique
  phone        String?
  address      String?
  totalSpent   Float     @default(0)
  orderCount   Int       @default(0)
  status       String    @default("active")
  joinDate     DateTime  @default(now())
  lastPurchase DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  orders       Order[]
}

model Order {
  id          String      @id @default(cuid())
  orderNumber String      @unique
  customer    Customer?   @relation(fields: [customerId], references: [id])
  customerId  String?
  date        DateTime    @default(now())
  status      String      @default("PENDING")
  total       Float
  tax         Float       @default(0)
  shipping    Float       @default(0)
  discount    Float       @default(0)
  notes       String?
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
  subtotal  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
} 